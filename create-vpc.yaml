Parameters:
  AvailabilityZones:
    Description: The list of Availability Zones to use for the subnets in the VPC.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCName:
    Type: String
    Default: "MyVPC"
    Description: VPC for Lab 3.
  CidrBlock:
    Type: String
    Default: "10.0.0.0/16"
    Description: CIDR block for VPC Lab 3.
  PublicSubnetCidr:
    Type: String
    Default: "10.0.1.0/24"
    Description: CIDR block for the public subnet for VPC Lab 3.
  PrivateSubnetCidr:
    Type: String
    Default: "10.0.2.0/24"
    Description: CIDR block for the private subnet for VPC Lab 3.

Resources:
  # Create the VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName

  # Create the Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-InternetGateway"

  # Attach Internet Gateway to VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Create a Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicSubnet"

  # Route Table
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnet
  PublicSubnetDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Create a Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PrivateSubnet"

Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: VPCId

  PublicSubnetId:
    Value: !Ref PublicSubnet
    Export:
      Name: PublicSubnetId

  PrivateSubnetId:
    Value: !Ref PrivateSubnet
    Export:
      Name: PrivateSubnetId
